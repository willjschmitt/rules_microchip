load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

def microchip_repositories():
    # A pre-built archive of the XC32 compiler. Microchip only ships an
    # installer rather than a tar of the compilers, so this is the result of
    # running the installer in a "portable"-like mode, and then taring the
    # resultant directory.
    # This tar can be regenerated by running `install_and_package_xc32.sh <version>`.
    http_archive(
        name = "xc32",
        url = "https://storage.googleapis.com/wschmitt-fileshare/xc32-v3.01.tar.gz",
        type = "tar.gz",
        sha256 = "2608f486b9d457d42ea7fb18ac6b70bbbecc600e50a3defd9ba4972b3e05a02b",
        build_file_content = """
package(default_visibility = ['//visibility:public'])

filegroup(
  name = "all",
  srcs = glob(["**/*"]),
)
"""
    )

def dfp_repositories():
    http_archive(
        name = "pic32mk_gp_dfp",
        url = "https://packs.download.microchip.com/Microchip.PIC32MK-GP_DFP.1.6.144.atpack",
        type = "zip",
        build_file_content = """
package(default_visibility=["//visibility:public"])

cc_library(
    name = "xc_headers",
    hdrs = [
        "include/xc.h",
        "include/xc-pic32m.h",
    ] + glob(["include/proc/*.h"]),
    strip_include_prefix = "include/",
)
""",
        sha256 = "2ed8fe9fb07a44f32cc257df21316d6ace0bd9eb2e36fb62786a07a916051b10",
    )